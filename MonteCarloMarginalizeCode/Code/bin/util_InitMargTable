#! /usr/bin/env python

import argparse
import numpy as np
from scipy.special import logsumexp

import RIFT.likelihood.factored_likelihood as factored_likelihood

parser = argparse.ArgumentParser()
parser.add_argument("--d-min", default=1, type=float, help="Minimum distance in volume integral. Used to SET THE PRIOR; changing this value changes the numerical answer.")
parser.add_argument("--d-max", default=10000, type=float, help="Maximum distance in volume integral. Used to SET THE PRIOR; changing this value changes the numerical answer.")
parser.add_argument("--out", default="distance_marginalization_lookup.npz", help="Output file (format should be .npz)")
opts=  parser.parse_args()

dmin = opts.d_min
dmax = opts.d_max
dref = factored_likelihood.distMpcRef

distance_array = np.linspace(dmin, dmax, int(1e4))
delta_distance = distance_array[1] - distance_array[0]
distance_prior_array = (3. / (dmax**3. - dmin**3.)) * distance_array**2.
dist_margd_loglikelihood_array = np.zeros((400, 800))
optimal_snr_squared_ref_array = np.logspace(-5, 8, dist_margd_loglikelihood_array.shape[0])
for ii, optimal_snr_squared_ref in enumerate(optimal_snr_squared_ref_array):
    optimal_snr_squared_array = optimal_snr_squared_ref * dref ** 2. / distance_array ** 2
    n_negative = dist_margd_loglikelihood_array.shape[1] // 2
    n_positive = dist_margd_loglikelihood_array.shape[1] - n_negative
    d_inner_h_ref_array = np.hstack((-np.logspace(3, -3, n_negative), np.logspace(-3, 8, n_positive)))
    for jj, d_inner_h_ref in enumerate(d_inner_h_ref_array):
        d_inner_h_array = d_inner_h_ref * dref / distance_array
        dist_margd_loglikelihood_array[ii][jj] = \
            logsumexp(d_inner_h_array - optimal_snr_squared_array / 2, b=distance_prior_array * delta_distance)

# save the list
np.savez(opts.out,
         phase_marginalization=False,
         d_inner_h_ref_array=d_inner_h_ref_array,
         optimal_snr_squared_ref_array=optimal_snr_squared_ref_array,
         dist_margd_loglikelihood_array=dist_margd_loglikelihood_array)
