#! /usr/bin/env python
#
# GOAL
#     Pipeline generation (including datafind, etc) to analyze real events, 
#     in 'model analysis' mode, using multiple iterations of fitting and ILE code.
#
# REFERENCES
#    lalinfereence_pipe
#    
#      https://lscsoft.docs.ligo.org/lalsuite/lalinference/lalinference__pipe_8py_source.html
#      https://github.com/lscsoft/lalsuite/blob/master/lalinference/python/lalinference/lalinference_pipe_utils.py
#      https://github.com/lscsoft/lalsuite/blob/master/lalinference/src/lalinference_pipe_example.ini
#      https://github.com/lscsoft/lalsuite/blob/master/lalinference/python/lalinference_pipe.py




from lalinference import lalinference_pipe_utils as pipe_utils
from lalapps import inspiralutils
from six.moves import configparser
from optparse import OptionParser,OptionValueError
import sys
import ast
import os
import uuid
from glue import pipeline
from math import ceil

usage=""" %prog [options] config.ini
 Setup a Condor DAG file to run the LALInference pipeline based on
 the config.ini file.
 
 The user can specify either an XML or a 
 a GraceDB ID with the --gid option
 or an ASCII list of GPS times with the --gps-time-file option.
 
 The user must also specify and ini file which will contain the main analysis config.
"""

parser=OptionParser(usage)
parser.add_option("-r","--run-path",default=None,action="store",type="string",help="Directory to run pipeline in (default: $PWD)",metavar="RUNDIR")
parser.add_option("-p","--daglog-path",default=None,action="store",type="string",help="Path to directory to contain DAG log file. SHOULD BE LOCAL TO SUBMIT NODE",metavar="LOGDIR")
parser.add_option("--gps",action="append",type="string",default=None,help="Analyse GPS time",metavar="GPSTIME")
parser.add_option("-g","--gps-time-file",action="store",type="string",default=None,help="Text file containing list of GPS times to analyse",metavar="TIMES.txt")
parser.add_option("-t","--single-triggers",action="store",type="string",default=None,help="SnglInspiralTable trigger list",metavar="SNGL_FILE.xml")
parser.add_option("-C","--coinc-triggers",action="store",type="string",default=None,help="CoinInspiralTable trigger list",metavar="COINC_FILE.xml")
parser.add_option("--gid",action="store",type="string",default=None,help="GraceDB ID")
parser.add_option("-I","--injections",action="store",type="string",default=None,help="List of injections to perform and analyse",metavar="INJFILE.xml")
parser.add_option("-B","--burst_injections",action="store",type="string",default=None,help="SimBurst table for LIB injections",metavar="INJFILE.xml")
parser.add_option("-P","--pipedown-db",action="store",type="string",default=None,help="Pipedown database to read and analyse",metavar="pipedown.sqlite")
 parser.add_option("--condor-submit",action="store_true",default=False,help="Automatically submit the condor dag") 
