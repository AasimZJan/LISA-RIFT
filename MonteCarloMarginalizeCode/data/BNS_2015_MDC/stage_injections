#!/usr/bin/env python
import sys
import os
import shutil
import random

random.seed(0)

from glue.ligolw import utils, table, ligolw, lsctables

def ready_template(fname, event):
    with open(fname) as fin:
        lines = fin.readlines()

    for i, line in enumerate(lines):
        if line[:5] == "MASS1":
            lines[i] = line.strip() + str(event.mass1) + "\n"
        elif line[:5] == "MASS2":
            lines[i] = line.strip() + str(event.mass2) + "\n"
        elif line[:10] == "EVENT_TIME":
            lines[i] = line.strip() + "%10.9f" % float(event.get_end()) + "\n"

    return "".join(lines)

si_table = table.get_table(utils.load_filename(sys.argv[1]), lsctables.SimInspiralTable.tableName)

new_table = lsctables.New(lsctables.SimInspiralTable, si_table.validcolumns.keys())
if len(sys.argv[2:]) == 0:
    new_table.extend(filter(lambda si: si.distance > 10 and si.distance < 50 and random.random() < 0.1, si_table))
else:
    ids = map(int, sys.argv[2:])
    new_table.extend(filter(lambda si: int(si.simulation_id) in ids, si_table))

xmldoc = ligolw.Document()
xmldoc.appendChild(ligolw.LIGO_LW())
xmldoc.childNodes[0].appendChild(new_table)

utils.write_filename(xmldoc, "selected_events.xml.gz", gz=True)

for si in new_table:
    sid = int(si.simulation_id)
    bdir = "sim_id_%d_common" % sid
    if not os.path.isdir(bdir):
        os.mkdir(bdir)
    #with open(bdir + "/Makefile", "w") as fout:
        #print >>fout, ready_template("Makefile.template", si)

    os.chdir(bdir)
    if not os.path.exists("H1_PSD_measured.xml.gz"):
        os.symlink("../H1_PSD_measured.xml.gz", "H1_PSD_measured.xml.gz")
    if not os.path.exists("L1_PSD_measured.xml.gz"):
        os.symlink("../L1_PSD_measured.xml.gz", "L1_PSD_measured.xml.gz")
    os.chdir("../")

    shutil.copy("Makefile.template", bdir + "/Makefile")
    new_table = lsctables.New(lsctables.SimInspiralTable, si_table.validcolumns.keys())
    new_table.append(si)
    
    xmldoc = ligolw.Document()
    xmldoc.appendChild(ligolw.LIGO_LW())
    xmldoc.childNodes[0].appendChild(new_table)
    utils.write_filename(xmldoc, bdir + "/mdc.xml.gz", gz=True)
